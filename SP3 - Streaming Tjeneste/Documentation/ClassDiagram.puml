@startuml
'https://plantuml.com/class-diagram

class Streaming{
+ {static}UserHandler userHandler
+ {static} TextUI UI
+ {static} MediaHandler mediaHandler
+ {static} IO io
+ {static} ExceptionHandler exceptionHandler
+ {static} void main (String)
- {static} void setup()
+ {static} User getCurrentUser()
}
class MediaHandler{
- Media currentMedia
- IO io
- ArrayList<Media> media
+ MediaHandler(IO)
+ Media getCurrentMedia()
+ ArrayList<Media> getListFromInline(String)
+ ArrayList<Media> getMedia()
+ Media getMediaFromName(String)
+ String inlineListString(ArrayList<Media>)
+ void loadMovies()
+ void loadSeries()
+ ArrayList<Media> searchGenre(String)
+ ArrayList<Media> searchMedia(String,String,String,float,float)
+ ArrayList<Media> searchMedia(ArrayList<Media>,String,String,float,float)
+ ArrayList<Media> searchName(String)
+ ArrayList<Media> searchRating(float,float)
+ ArrayList<Media> searchYear(String)
+ void selectMedia(Media)
+ void selectMedia(String)
}
abstract class Media{
- String Genre
- String name
- float rating
- String year
+ Media(String,String,float,String)
+ String getGenre()
+ String getName()
+ float getRating()
+ String getYear()
+ String toString()
}
class Movie{
- double lengthOfMovie
+ Movie(String,String,float,String,double)
+ double getLengthOfMovie()
+ String toString()
}
class Series{
- ArrayList<Interger> episodes
+ Series(String,String,float,double,String,ArrayList<Interger>)
+ String toString()
}
class UserHandler{
# ArrayList<User> users
# User currentUser
- IO io
+ UserHandler(IO,MediaHandler)
+ void changeUsername(String) throws InvalidUsername
+ boolean currentUserIsAdmin()
+ boolean currentUserIsAdult()
+ User getCurrentUser()
+ User getUser(int)
+ ArrayList<User> getUsers()
+ boolean hasCurrrentUser()
+ void login(String,String)
+ void registerUser(String,String,boolean)
+ void save()
+ void setCurrentUser(User)
}
class User{
- String username
- String password
- FINAL int id
- int countID
- boolean isAdmin
- boolean isAdult
- ArrayList<Media> savedMedia
- ArrayList<Media> watchedMedia
+ User(String,String,boolean,boolean)
+ User(String,String,boolean,boolean,ArrayList<Media>)
+ void addSavedMedia(Media)
+ void addWatchedMedia(Media)
+ int getId()
+ String getPassword()
+ ArrayList<Media> getSavedMedia()
+ String getUsername()
+ ArrayList<Media> getWatchedMedia()
+ boolean isAdmin
+ boolean isAdult
+ void removeSavedMedia(Media)
+ String saveUserData()
+ void setUsername(String)
+ String toString()
}
class FileIO{
- ArrayList<String> read(String)
}
interface IO{
+ ArrayList<String> readDataMedia()
+ ArrayList<String> readDataSeries()
+ ArrayList<String> readDataUser()
+ void writeDataUser(User)
}
class ExceptionHandler{
    + ExceptionHandler()
    + ExceptionHandler(UI ui)
    + void catchException(Exception)
    - UI ui
}
class TextUI {
    + TextUI(UserHandler, MediaHandler)
    + void displayMessage(String)
    + String getUserInput(String)
    + int getUserInputInt()
    + void pageSelectMenu(ArrayList<Media>, int)
    + void searchMovieMenu()
    + void seeListOfSavedMovies()
    + void seeListOfWatchedMovies()
    + void selectMedia()
    + void watchMovieMenu()
    - final ExceptionHandler
    - boolean isAdmin
    - boolean isAdult
    - final MediaHandler
    - final Scanner
    - final UserHandler
}
Interface UI {
    + void library()
    + void login()
    + void loginOrRegister()
    + void mainMenu()
    + void registerUser()
    + void settings(User)
    + void viewMovie(Media)
}
Class Exception
Class InValidPasswordException{
+ InValidPasswordException(String)
}
Class InValidUsername{
+ InValidUsername(String)
}
Class InValidPasswordOrPasswordException{
+ InValidPasswordOrPasswordException(String)
}



Streaming *-- UserHandler
UserHandler *-- User
Streaming *-- MediaHandler
MediaHandler *-- Media
Media <|--  Movie
Media <|--  Series

IO <|-- "implements" FileIO
UI <|-- "implements" TextUI
ExceptionHandler *-- UI
ExceptionHandler o-- InValidPasswordException
ExceptionHandler o-- InValidUsername
ExceptionHandler o-- InValidPasswordOrPasswordException
Streaming *-- ExceptionHandler
UserHandler *-- IO
MediaHandler *-- IO
Streaming *-- UI

Exception <|-- InValidPasswordException
Exception <|-- InValidUsername
Exception <|-- InValidPasswordOrPasswordException





@enduml